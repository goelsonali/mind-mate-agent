# Set a longer timeout for the build (30 minutes)
timeout: 1800s

# Substitution variables with defaults
substitutions:
  _DEPLOY_FRONTEND: 'true'
  _DEPLOY_BACKEND: 'true'
  _REGION: 'europe-west2'
  _PROJECT_ID: 'static-concept-459810-q7'

# Enable explicit logging
options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Log build start for debugging
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args: ['-c', 'echo "Starting Mind Mate build process for $PROJECT_ID"']
  
  # Frontend deployment
  # Build the frontend container image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    waitFor: ['-']
    # Skip if _DEPLOY_FRONTEND is false
    env:
      - '_DEPLOY_FRONTEND=$_DEPLOY_FRONTEND'
    script: |
      if [ "$_DEPLOY_FRONTEND" = "false" ]; then
        echo "Skipping frontend build as _DEPLOY_FRONTEND=$_DEPLOY_FRONTEND"
        exit 0
      fi
      docker build -t europe-west2-docker.pkg.dev/$_PROJECT_ID/mindmate/frontend:latest -f ./app/frontend/Dockerfile ./app/frontend
  
  # Push the frontend container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    waitFor: ['build-frontend']
    # Only run if _DEPLOY_FRONTEND is true
    env:
      - '_DEPLOY_FRONTEND=$_DEPLOY_FRONTEND'
    script: |
      if [ "$_DEPLOY_FRONTEND" = "false" ]; then
        echo "Skipping frontend push as _DEPLOY_FRONTEND=$_DEPLOY_FRONTEND"
        exit 0
      fi
      docker push europe-west2-docker.pkg.dev/$_PROJECT_ID/mindmate/frontend:latest
  
  # Deploy frontend container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-frontend'
    waitFor: ['push-frontend']
    # Only run if _DEPLOY_FRONTEND is true
    env:
      - '_DEPLOY_FRONTEND=$_DEPLOY_FRONTEND'
    script: |
      if [ "$_DEPLOY_FRONTEND" = "false" ]; then
        echo "Skipping frontend deployment as _DEPLOY_FRONTEND=$_DEPLOY_FRONTEND"
        exit 0
      fi
      gcloud run deploy mindmate-frontend \
        --image europe-west2-docker.pkg.dev/$_PROJECT_ID/mindmate/frontend:latest \
        --region $_REGION \
        --platform managed \
        --allow-unauthenticated

  # Backend deployment
  # Build the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    waitFor: ['-']
    # Only run if _DEPLOY_BACKEND is true
    env:
      - '_DEPLOY_BACKEND=$_DEPLOY_BACKEND'
    script: |
      if [ "$_DEPLOY_BACKEND" = "false" ]; then
        echo "Skipping backend build as _DEPLOY_BACKEND=$_DEPLOY_BACKEND"
        exit 0
      fi
      docker build -t europe-west2-docker.pkg.dev/$_PROJECT_ID/mindmate/backend:latest -f ./app/backend/Dockerfile ./app/backend
  
  # Push the backend container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    waitFor: ['build-backend']
    # Only run if _DEPLOY_BACKEND is true
    env:
      - '_DEPLOY_BACKEND=$_DEPLOY_BACKEND'
    script: |
      if [ "$_DEPLOY_BACKEND" = "false" ]; then
        echo "Skipping backend push as _DEPLOY_BACKEND=$_DEPLOY_BACKEND"
        exit 0
      fi
      docker push europe-west2-docker.pkg.dev/$_PROJECT_ID/mindmate/backend:latest
  
  # Deploy backend container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-backend'
    waitFor: ['push-backend']
    # Only run if _DEPLOY_BACKEND is true
    env:
      - '_DEPLOY_BACKEND=$_DEPLOY_BACKEND'
    script: |
      if [ "$_DEPLOY_BACKEND" = "false" ]; then
        echo "Skipping backend deployment as _DEPLOY_BACKEND=$_DEPLOY_BACKEND"
        exit 0
      fi
      gcloud run deploy mindmate-backend \
        --image europe-west2-docker.pkg.dev/$_PROJECT_ID/mindmate/backend:latest \
        --region $_REGION \
        --platform managed \
        --memory 1Gi \
        --allow-unauthenticated

images:
  - 'europe-west2-docker.pkg.dev/$_PROJECT_ID/mindmate/frontend:latest'
  - 'europe-west2-docker.pkg.dev/$_PROJECT_ID/mindmate/backend:latest'
